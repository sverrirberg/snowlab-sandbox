/*
 * SNOWLAB SANDBOX - BRONZE LAYER VALIDATION
 * 
 * Purpose:
 * This script performs comprehensive validation checks on the bronze layer data,
 * analyzing data quality and completeness across CRM and ERP systems.
 *
 * Tables Validated:
 * CRM System:
 * - CRM_CUST_INFO: Customer information
 * - CRM_PRD_INFO: Product information
 * - CRM_SALES_DETAILS: Sales transactions
 *
 * ERP System:
 * - ERP_CUST_AZ12: Customer data
 * - ERP_LOG_A101: System logs
 * - ERP_PX_CAT_G1V2: Product categories
 *
 * Validation Checks:
 * 1. Customer data comparison between systems
 * 2. Product data validation
 * 3. Sales data completeness
 * 4. Log data analysis
 * 5. NULL value checks for key fields
 *
 * Usage:
 * Execute this script after data loads to verify data quality
 * and identify potential issues in the raw data.
 *
 * Version: 1.0
 * Created: 2024-04-16
 */

-- 1. Customer Data Comparison
SELECT 
    'Customer Count Comparison' as CHECK_TYPE,
    'CRM' as SOURCE,
    COUNT(*) as CUSTOMER_COUNT,
    COUNT(DISTINCT CST_ID) as UNIQUE_CUSTOMER_IDS,
    MIN(CST_CREATE_DATE) as EARLIEST_CUSTOMER,
    MAX(CST_CREATE_DATE) as LATEST_CUSTOMER
FROM SNOWLAB_SANDBOX.BRONZE.CRM_CUST_INFO
UNION ALL
SELECT 
    'Customer Count Comparison' as CHECK_TYPE,
    'ERP' as SOURCE,
    COUNT(*) as CUSTOMER_COUNT,
    COUNT(DISTINCT CID) as UNIQUE_CUSTOMER_IDS,
    MIN(BDATE) as EARLIEST_CUSTOMER,
    MAX(BDATE) as LATEST_CUSTOMER
FROM SNOWLAB_SANDBOX.BRONZE.ERP_CUST_AZ12;

-- 2. Product Data Validation
SELECT 
    'Product Count Comparison' as CHECK_TYPE,
    'CRM' as SOURCE,
    COUNT(*) as PRODUCT_COUNT,
    COUNT(DISTINCT PRD_ID) as UNIQUE_PRODUCT_IDS,
    MIN(PRD_START_DT) as EARLIEST_PRODUCT,
    MAX(PRD_END_DT) as LATEST_PRODUCT
FROM SNOWLAB_SANDBOX.BRONZE.CRM_PRD_INFO
UNION ALL
SELECT 
    'Product Count Comparison' as CHECK_TYPE,
    'ERP' as SOURCE,
    COUNT(*) as PRODUCT_COUNT,
    COUNT(DISTINCT ID) as UNIQUE_PRODUCT_IDS,
    NULL as EARLIEST_PRODUCT,
    NULL as LATEST_PRODUCT
FROM SNOWLAB_SANDBOX.BRONZE.ERP_PX_CAT_G1V2;

-- 3. Sales Data Validation
SELECT 
    'Sales Data Validation' as CHECK_TYPE,
    COUNT(*) as TOTAL_TRANSACTIONS,
    COUNT(DISTINCT SLS_ORD_NUM) as UNIQUE_ORDERS,
    COUNT(DISTINCT SLS_CUST_ID) as UNIQUE_CUSTOMERS,
    COUNT(DISTINCT SLS_PRD_KEY) as UNIQUE_PRODUCTS,
    MIN(SLS_ORDER_DT) as EARLIEST_ORDER,
    MAX(SLS_ORDER_DT) as LATEST_ORDER,
    SUM(SLS_SALES) as TOTAL_SALES,
    SUM(SLS_QUANTITY) as TOTAL_QUANTITY
FROM SNOWLAB_SANDBOX.BRONZE.CRM_SALES_DETAILS;

-- 4. Data Completeness Check
SELECT 
    'CRM_CUST_INFO Completeness' as CHECK_TYPE,
    COUNT(*) as TOTAL_ROWS,
    COUNT(CASE WHEN CST_ID IS NULL THEN 1 END) as NULL_CST_ID,
    COUNT(CASE WHEN CST_KEY IS NULL THEN 1 END) as NULL_CST_KEY,
    COUNT(CASE WHEN CST_CREATE_DATE IS NULL THEN 1 END) as NULL_CREATE_DATE
FROM SNOWLAB_SANDBOX.BRONZE.CRM_CUST_INFO
UNION ALL
SELECT 
    'CRM_PRD_INFO Completeness' as CHECK_TYPE,
    COUNT(*) as TOTAL_ROWS,
    COUNT(CASE WHEN PRD_ID IS NULL THEN 1 END) as NULL_PRD_ID,
    COUNT(CASE WHEN PRD_KEY IS NULL THEN 1 END) as NULL_PRD_KEY,
    COUNT(CASE WHEN PRD_START_DT IS NULL THEN 1 END) as NULL_START_DATE
FROM SNOWLAB_SANDBOX.BRONZE.CRM_PRD_INFO
UNION ALL
SELECT 
    'CRM_SALES_DETAILS Completeness' as CHECK_TYPE,
    COUNT(*) as TOTAL_ROWS,
    COUNT(CASE WHEN SLS_ORD_NUM IS NULL THEN 1 END) as NULL_ORD_NUM,
    COUNT(CASE WHEN SLS_CUST_ID IS NULL THEN 1 END) as NULL_CUST_ID,
    COUNT(CASE WHEN SLS_SALES IS NULL THEN 1 END) as NULL_SALES
FROM SNOWLAB_SANDBOX.BRONZE.CRM_SALES_DETAILS
UNION ALL
SELECT 
    'ERP_CUST_AZ12 Completeness' as CHECK_TYPE,
    COUNT(*) as TOTAL_ROWS,
    COUNT(CASE WHEN CID IS NULL THEN 1 END) as NULL_CID,
    COUNT(CASE WHEN BDATE IS NULL THEN 1 END) as NULL_BDATE,
    COUNT(CASE WHEN GEN IS NULL THEN 1 END) as NULL_GEN
FROM SNOWLAB_SANDBOX.BRONZE.ERP_CUST_AZ12
UNION ALL
SELECT 
    'ERP_LOG_A101 Completeness' as CHECK_TYPE,
    COUNT(*) as TOTAL_ROWS,
    COUNT(CASE WHEN C1 IS NULL THEN 1 END) as NULL_C1,
    COUNT(CASE WHEN C2 IS NULL THEN 1 END) as NULL_C2,
    0 as PLACEHOLDER
FROM SNOWLAB_SANDBOX.BRONZE.ERP_LOG_A101
UNION ALL
SELECT 
    'ERP_PX_CAT_G1V2 Completeness' as CHECK_TYPE,
    COUNT(*) as TOTAL_ROWS,
    COUNT(CASE WHEN ID IS NULL THEN 1 END) as NULL_ID,
    COUNT(CASE WHEN CAT IS NULL THEN 1 END) as NULL_CAT,
    COUNT(CASE WHEN SUBCAT IS NULL THEN 1 END) as NULL_SUBCAT
FROM SNOWLAB_SANDBOX.BRONZE.ERP_PX_CAT_G1V2; 